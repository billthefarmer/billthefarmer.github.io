<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hacking on Bill Farmer</title>
    <link>http://localhost:1313/blog/categories/hacking/</link>
    <description>Recent content in Hacking on Bill Farmer</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <copyright>Copyright &amp;copy; 2006 Bill Farmer</copyright>
    <lastBuildDate>Tue, 06 Feb 2024 08:37:04 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/categories/hacking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flutter app bar search widget</title>
      <link>http://localhost:1313/blog/flutter-search-widget/</link>
      <pubDate>Tue, 06 Feb 2024 08:37:04 +0000</pubDate>
      <guid>http://localhost:1313/blog/flutter-search-widget/</guid>
      <description>&lt;p&gt;As an exercise I decided to reimplement my &lt;a href=&#34;https://github.com/billthefarmer/buses&#34;&gt;Buses&lt;/a&gt; app in&#xA;flutter. To do this I need an open street map library, a beautiful&#xA;soup library, a location library, an OS ref library, and a search&#xA;widget. All of these are available in &lt;a href=&#34;https://pub.dev/&#34;&gt;pub.dev&lt;/a&gt;, except a suitable&#xA;search widget. All implementations of &lt;a href=&#34;https://api.flutter.dev/flutter/material/SearchBar-class.html&#34;&gt;SearchBar&lt;/a&gt; in the docs include an&#xA;annoying dropdown suggestions feature, which appears to be mandatory.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/2024/02/BusApp.png&#34; alt=&#34;BusApp&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;However it is possible to take the SearchBar and include it in an&#xA;&lt;a href=&#34;https://api.flutter.dev/flutter/material/AppBar-class.html&#34;&gt;AppBar&lt;/a&gt;, change the icons and end up with something which looks&#xA;and acts very similarly to an android search widget. To do this, add&#xA;code to the actions of the app bar which either shows an icon button&#xA;or the search bar, controlled by a boolean which is set by pressing&#xA;the search button. The search bar is wrapped by an &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/Expanded-class.html&#34;&gt;Expanded&lt;/a&gt;&#xA;widget to stop it overflowing the display. The search bar has a&#xA;leading button which dismisses it, a conditional trailing button to&#xA;clear the search field and a button to do the search.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Navigation Menu</title>
      <link>http://localhost:1313/blog/android-navigation-menu/</link>
      <pubDate>Wed, 06 Sep 2023 13:46:00 +0100</pubDate>
      <guid>http://localhost:1313/blog/android-navigation-menu/</guid>
      <description>&lt;p&gt;Android versions from android 5 use a &lt;a href=&#34;https://developer.android.com/reference/android/widget/Toolbar?hl=en&#34;&gt;Toolbar&lt;/a&gt; as the&#xA;&lt;a href=&#34;https://developer.android.com/reference/android/app/ActionBar?hl=en&#34;&gt;ActionBar&lt;/a&gt;, but there appears to be no obvious API access.&lt;/p&gt;&#xA;&lt;p&gt;However, by traversing the view hierarchy, it can be found and used to&#xA;set up app navigation.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/2023/09/Navigation.png&#34; alt=&#34;Navigation&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Create a recursive function to traverse the views and find the toolbar.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// findToolbar&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Toolbar&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;findToolbar&lt;/span&gt;(ViewGroup&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;group)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;View&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;result&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;null&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;count&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;group.&lt;span style=&#34;color:#b44&#34;&gt;getChildCount&lt;/span&gt;();&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;i&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;0;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;i&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;count;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;i&lt;span style=&#34;color:#666&#34;&gt;++&lt;/span&gt;)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;View&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;view&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;group.&lt;span style=&#34;color:#b44&#34;&gt;getChildAt&lt;/span&gt;(i);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(view&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;instanceof&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Toolbar)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(Toolbar)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;view;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(view&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;instanceof&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;ViewGroup)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;result&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;findToolbar((ViewGroup)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;view);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(result&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;null&lt;/span&gt;)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;break&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(Toolbar)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;result;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Having written this hack, I then discovered a more efficient way using&#xA;built in functionality.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Update App Widget</title>
      <link>http://localhost:1313/blog/update-widget/</link>
      <pubDate>Sat, 29 Jul 2023 19:33:44 +0100</pubDate>
      <guid>http://localhost:1313/blog/update-widget/</guid>
      <description>&lt;p&gt;Android app widgets normally can be set up to update periodically, but&#xA;not repeatedly for a short period. For a &lt;a href=&#34;https://github.com/billthefarmer/buses&#34;&gt;bus times app&lt;/a&gt; I need the&#xA;widget to update every 30 seconds for about 5 minutes.&lt;/p&gt;&#xA;&lt;p&gt;I already had a &lt;a href=&#34;https://developer.android.com/reference/android/app/Service&#34;&gt;Service&lt;/a&gt; set up to update the widget from a&#xA;suitable web site and using a &lt;a href=&#34;https://developer.android.com/reference/android/os/Handler&#34;&gt;Handler&lt;/a&gt; to reset the progress bar&#xA;if the background update process failed.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;RESET_DELAY&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;5&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;1000;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;REPEAT_DELAY&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;30&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;1000;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;STOP_DELAY&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;5&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;60&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;1000;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Handler&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;handler;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stopUpdate;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// onCreate&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Override&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;onCreate&lt;/span&gt;()&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Get handler&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;handler&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Handler(Looper.&lt;span style=&#34;color:#b44&#34;&gt;getMainLooper&lt;/span&gt;());&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(BuildConfig.&lt;span style=&#34;color:#b44&#34;&gt;DEBUG&lt;/span&gt;)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;Log.&lt;span style=&#34;color:#b44&#34;&gt;d&lt;/span&gt;(TAG,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;onCreate &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;handler);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Define the various delays and get a handler in the &lt;code&gt;onCreate()&lt;/code&gt; method.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create a Word Grid</title>
      <link>http://localhost:1313/blog/create-word-grid/</link>
      <pubDate>Sat, 11 Jun 2022 10:55:18 +0100</pubDate>
      <guid>http://localhost:1313/blog/create-word-grid/</guid>
      <description>&lt;p&gt;A &lt;a href=&#34;https://wafflegame.net/&#34;&gt;popular online puzzle game&lt;/a&gt; involves solving a five character&#xA;word grid in the least number of moves. There are probably several&#xA;ways of algorithmically generating word grids, &lt;a href=&#34;https://en.wikipedia.org/wiki/Dancing_Links&#34;&gt;Donald Knuth&amp;rsquo;s Dancing&#xA;Links&lt;/a&gt; paper mentions generating a word grid. I decided to use&#xA;brute force and a randomised word list.&lt;/p&gt;&#xA;&lt;p&gt;This uses a large number of lists and iterators and can generate a&#xA;large number of word grids. This algorithm is used in my &lt;a href=&#34;https://github.com/billthefarmer/gridle&#34;&gt;Gridle&lt;/a&gt;&#xA;&lt;a href=&#34;https://f-droid.org/packages/org.billthefarmer.gridle/&#34;&gt;android app&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Read Paywalled Newspaper Articles</title>
      <link>http://localhost:1313/blog/read-paywalled-articles/</link>
      <pubDate>Sat, 18 Dec 2021 13:55:26 +0000</pubDate>
      <guid>http://localhost:1313/blog/read-paywalled-articles/</guid>
      <description>&lt;p&gt;Most mainstream newspapers show a teaser front page on their web site,&#xA;but hide most of their content behind a paywall. As with most things&#xA;you can think of, there is a browser extension for this –&#xA;&lt;a href=&#34;https://github.com/iamadamdev/bypass-paywalls-chrome/blob/master/README.md&#34;&gt;Bypass Paywalls&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;However this does not work for all newspapers, the extension appears&#xA;to have dropped support for &lt;a href=&#34;https://www.thetimes.co.uk/&#34;&gt;The Times&lt;/a&gt;, for example. It is still&#xA;possible to read some articles by making use of a search engine to&#xA;find another source for the text of the item. To do this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Flutter</title>
      <link>http://localhost:1313/blog/android-flutter/</link>
      <pubDate>Thu, 15 Jul 2021 13:37:07 +0100</pubDate>
      <guid>http://localhost:1313/blog/android-flutter/</guid>
      <description>&lt;p&gt;Google have made a big &lt;a href=&#34;https://medium.com/flutter/announcing-flutter-2-2-at-google-i-o-2021-92f0fcbd7ef9&#34;&gt;thing&lt;/a&gt; of their &lt;a href=&#34;https://flutter.dev/&#34;&gt;flutter&lt;/a&gt; development&#xA;platform, so I thought I ought to give it a try. It&amp;rsquo;s easy to install,&#xA;just download the &lt;a href=&#34;https://storage.googleapis.com/flutter_infra_release/releases/stable/windows/flutter_windows_2.2.3-stable.zip&#34;&gt;sdk&lt;/a&gt;, unzip it in a suitable place and add the&#xA;&lt;code&gt;bin&lt;/code&gt; folder to your &lt;code&gt;path&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;update&#34;&gt;Update&lt;/h3&gt;&#xA;&lt;p&gt;I decided to have another look as it appears to be liked by developers&#xA;on &lt;a href=&#34;https://old.reddit.com/r/FlutterDev/&#34;&gt;Reddit&lt;/a&gt;. The old version wouldn&amp;rsquo;t update, so I downloaded the&#xA;latest (Flutter 3.16.5) and replaced it. This time it found everything&#xA;it wanted. This time I build a simplistic app that just displays an&#xA;image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Kotlin</title>
      <link>http://localhost:1313/blog/android-kotlin/</link>
      <pubDate>Fri, 14 May 2021 09:49:11 +0100</pubDate>
      <guid>http://localhost:1313/blog/android-kotlin/</guid>
      <description>&lt;p&gt;All my android apps have up until now been written in Java, avoiding&#xA;the use of the support libraries or &lt;a href=&#34;https://developer.android.com/jetpack/androidx&#34;&gt;androidx&lt;/a&gt;. The Google&#xA;developers docs and &lt;a href=&#34;https://developer.android.com/guide&#34;&gt;guides&lt;/a&gt; advocate the use of &lt;a href=&#34;https://developer.android.com/kotlin&#34;&gt;Kotlin&lt;/a&gt; rather&#xA;than Java and the use of androidx almost to the exclusion of the&#xA;standard android API.&lt;/p&gt;&#xA;&lt;p&gt;I have a very simple app, &lt;a href=&#34;https://github.com/billthefarmer/oglaf&#34;&gt;Oglaf&lt;/a&gt;, NS(Generally)FW, which is just a&#xA;wrapper around the web site, with some navigation. So I decided to&#xA;convert it to Kotlin, just to see how difficult it was and to see what&#xA;effect, if any, it had on the app.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Word Count</title>
      <link>http://localhost:1313/blog/word-count/</link>
      <pubDate>Mon, 05 Apr 2021 10:28:06 +0100</pubDate>
      <guid>http://localhost:1313/blog/word-count/</guid>
      <description>&lt;p&gt;I was asked to add a word and character count to my &lt;a href=&#34;https://billthefarmer.github.io/editor/&#34;&gt;Editor&lt;/a&gt;&#xA;app. So I looked it up and found a &lt;a href=&#34;https://gist.github.com/ElegyD/65ad990d505ee20239ef5a3c16eec951&#34;&gt;Gist&lt;/a&gt; that uses&#xA;&lt;a href=&#34;https://developer.android.com/reference/java/text/BreakIterator&#34;&gt;BreakIterator&lt;/a&gt;. This relies on an embedded function that&#xA;determines what is considered a word.&lt;/p&gt;&#xA;&lt;p&gt;So I tested it and found that it gave different results to the linux&#xA;utility &lt;a href=&#34;https://linux.die.net/man/1/wc&#34;&gt;wc&lt;/a&gt;. However, the app already makes great use of regular&#xA;expressions, which include an expression for a word character &lt;code&gt;\w&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Download playlist video</title>
      <link>http://localhost:1313/blog/download-playlist-video/</link>
      <pubDate>Tue, 18 Aug 2020 20:49:05 +0100</pubDate>
      <guid>http://localhost:1313/blog/download-playlist-video/</guid>
      <description>&lt;p&gt;This has been superceded by &lt;a href=&#34;https://youtube-dl.org/&#34;&gt;youtube-dl&lt;/a&gt;, which seems to work on most video sites.&lt;/p&gt;&#xA;&lt;p&gt;Since I wrote &lt;a href=&#34;download-streamed-video&#34;&gt;Download streamed video&lt;/a&gt; video web sites have upped&#xA;their game to stop downloading. One of the techniques used is to use a&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/M3U&#34;&gt;M3U&lt;/a&gt; playlist and a complicated set of parameters. Other&#xA;techniques are to use JavaScript to create a blob and play that, and&#xA;to use a JavaScript browser app which goes into debug mode if you use&#xA;the developer tools.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Resurrecting an Old Dos App</title>
      <link>http://localhost:1313/blog/resurrecting-dos-app/</link>
      <pubDate>Sun, 09 Aug 2020 21:24:46 +0100</pubDate>
      <guid>http://localhost:1313/blog/resurrecting-dos-app/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/2020/08/Label.jpg&#34; alt=&#34;Label&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Back in the late 90&amp;rsquo;s I wrote an simulation app for an old telecontrol&#xA;system that was being superceded. It was written in Turbo C to run on&#xA;a DOS or Win95 PC.&lt;/p&gt;&#xA;&lt;p&gt;The app used a conio library provided by the compiler to present&#xA;colour character text and graphics on a monitor using a standard PC&#xA;keyboard.&lt;/p&gt;&#xA;&lt;p&gt;It used to run under 32 bit windows but wouldn&amp;rsquo;t run under 64 bit&#xA;windows as there is no DOS emulation. So I decided to see if I could&#xA;resurrect it using the windows API. There is a section in the windows&#xA;docs about &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/console&#34;&gt;Console Applications&lt;/a&gt; which provides much the same&#xA;functionality as the conio library.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lambda Expressions</title>
      <link>http://localhost:1313/blog/lambda-expressions/</link>
      <pubDate>Thu, 26 Mar 2020 13:02:53 +0000</pubDate>
      <guid>http://localhost:1313/blog/lambda-expressions/</guid>
      <description>&lt;p&gt;Lambda expressions or anonymous functions can be quite useful. For&#xA;example using &lt;a href=&#34;https://jquery.com&#34;&gt;jQuery&lt;/a&gt; in JavaScript all the work gets done in&#xA;anonymous functions unless you particularly want to extract them and&#xA;give them names&amp;hellip;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jQuery(&lt;span style=&#34;color:#a2f&#34;&gt;document&lt;/span&gt;).ready(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt;($) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Process the start button&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;    $(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;#start&amp;#34;&lt;/span&gt;).click(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        question &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;#data&amp;#34;&lt;/span&gt;).css(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;display&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;.intro&amp;#34;&lt;/span&gt;).fadeOut(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Do stuff&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;    });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In C++ the syntax is curious in that there are a pair of square&#xA;brackets enclosing &amp;lsquo;captured&amp;rsquo; variables&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hiding Edit Button</title>
      <link>http://localhost:1313/blog/hiding-button/</link>
      <pubDate>Sat, 15 Feb 2020 20:59:47 +0000</pubDate>
      <guid>http://localhost:1313/blog/hiding-button/</guid>
      <description>&lt;p&gt;My &lt;a href=&#34;https://github.com/billthefarmer/diary&#34;&gt;Diary&lt;/a&gt; and &lt;a href=&#34;https://github.com/billthefarmer/notes&#34;&gt;Notes&lt;/a&gt; apps have a floating button in the corner&#xA;of the screen which is used to switch between editing markdown text&#xA;and viewing the result. Although it is part of the android Material&#xA;Design, this button has been the subject of several issues raised by&#xA;users.&lt;/p&gt;&#xA;&lt;p&gt;I have seen apps which hide this button on scrolling, and this was one&#xA;of the suggestions by users. Getting this to work correctly turned out&#xA;to be more complex than initially considered, requiring two boolean&#xA;flags and a lambda expression.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Derive Edit Position from Markdown</title>
      <link>http://localhost:1313/blog/derive-edit-position/</link>
      <pubDate>Sat, 08 Feb 2020 18:24:23 +0000</pubDate>
      <guid>http://localhost:1313/blog/derive-edit-position/</guid>
      <description>&lt;p&gt;I had a request to switch to the edit view from the markdown view at&#xA;the double tap position in my &lt;a href=&#34;https://github.com/billthefarmer/diary&#34;&gt;Diary&lt;/a&gt; app. The app already has a&#xA;gesture detector so I just had to add an &lt;a href=&#34;https://developer.android.com/reference/android/view/GestureDetector.SimpleOnGestureListener.html#onDoubleTap(android.view.MotionEvent)&#34;&gt;onDoubleTap&lt;/a&gt; function.&lt;/p&gt;&#xA;&lt;p&gt;To get the tap position in the markdown view it is necessary to&#xA;compensate for the position of the view on the screen, scrolling, and&#xA;the display density.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// onDoubleTap&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Override&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;onDoubleTap&lt;/span&gt;(MotionEvent&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;e)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(shown)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;l&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;markdownView.&lt;span style=&#34;color:#b44&#34;&gt;getLocationOnScreen&lt;/span&gt;(l);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Get tap position&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;y&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;e.&lt;span style=&#34;color:#b44&#34;&gt;getY&lt;/span&gt;()&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;l&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;scrollY&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;markdownView.&lt;span style=&#34;color:#b44&#34;&gt;getScrollY&lt;/span&gt;();&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;contentHeight&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;markdownView.&lt;span style=&#34;color:#b44&#34;&gt;getContentHeight&lt;/span&gt;();&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;density&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;getResources().&lt;span style=&#34;color:#b44&#34;&gt;getDisplayMetrics&lt;/span&gt;().&lt;span style=&#34;color:#b44&#34;&gt;density&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Get markdown position&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;p&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(y&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;scrollY)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(contentHeight&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;density);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The function to get the view location on screen is a bit arcane in&#xA;that you must provide a two element array for the X and Y&#xA;co-ordinates. The position as a proportion of the total length of the&#xA;displayed markdown is calculated from the corrected Y position, the&#xA;scroll position and the density.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pi-hole Cloudflare, DNSCrypt, Unbound Setup</title>
      <link>http://localhost:1313/blog/pi-hole-cloudflare-setup/</link>
      <pubDate>Mon, 17 Jun 2019 18:30:39 +0100</pubDate>
      <guid>http://localhost:1313/blog/pi-hole-cloudflare-setup/</guid>
      <description>&lt;h3 id=&#34;pi-hole&#34;&gt;Pi-hole&lt;/h3&gt;&#xA;&lt;p&gt;I came across a reference to &lt;a href=&#34;https://pi-hole.net&#34;&gt;Pi-hole&lt;/a&gt; recently, so as my old pi&#xA;has been gathering dust, I thought I would try it out. The pi already&#xA;had &lt;a href=&#34;https://www.raspberrypi.org/downloads/raspbian&#34;&gt;Raspbian Stretch Lite&lt;/a&gt; installed, so I uninstalled some of the&#xA;packages I had previously installed, and loaded Pi-Hole using the&#xA;&lt;a href=&#34;https://github.com/pi-hole/pi-hole/#one-step-automated-install&#34;&gt;One-Step Automated Install&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The installation script asks a series of questions using text dialogs&#xA;and produces a log as it goes.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-log&#34; data-lang=&#34;log&#34;&gt;pi@catherine:~ $ curl -sSL https://install.pi-hole.net | bash&#xA;stty: &amp;#39;standard input&amp;#39;: Inappropriate ioctl for device&#xA;&#xA;  [✗] Root user check&#xA;  [i] Script called with non-root privileges&#xA;      The Pi-hole requires elevated privileges to install and run&#xA;      Please check the installer for any concerns regarding this requirement&#xA;      Make sure to download this script from a trusted source&#xA;&#xA;  [✓] Sudo utility check&#xA;stty: &amp;#39;standard input&amp;#39;: Inappropriate ioctl for device&#xA;&#xA;  [✓] Root user check&#xA;&#xA;  [i] Existing PHP installation detected : PHP version 7.0.33-0+deb9u3&#xA;  [✓] Disk space check&#xA;  [✓] Update local cache of available packages&#xA;&#xA;  [✓] Checking apt-get for upgraded packages... up to date!&#xA;&#xA;  [i] Installer Dependency checks...&#xA;  [✓] Checking for apt-utils&#xA;  [✓] Checking for dialog&#xA;  [✓] Checking for debconf&#xA;  [✓] Checking for dhcpcd5&#xA;  [✓] Checking for git&#xA;  [✓] Checking for iproute2&#xA;  [✓] Checking for whiptail&#xA;&#xA;  [i] Using interface: eth0&#xA;  [i] Using Cloudflare&#xA;  [i] Your static IPv4 address: 192.168.1.252&#xA;  [i] Your static IPv4 gateway: 192.168.1.254&#xA;  [✓] Set IP address to 192.168.1.252&#xA;  You may need to restart after the install is complete&#xA;  [i] IPv4 address: 192.168.1.252&#xA;  [i] IPv6 address:&#xA;  [i] Web Interface On&#xA;  [i] Web Server On&#xA;  [i] Logging On.&#xA;  [✗] Check for existing repository in /etc/.pihole&#xA;  [✓] Clone https://github.com/pi-hole/pi-hole.git into /etc/.pihole&#xA;&#xA;  [✗] Check for existing repository in /var/www/html/admin&#xA;  [✓] Clone https://github.com/pi-hole/AdminLTE.git into /var/www/html/admin&#xA;&#xA;  [i] Main Dependency checks...&#xA;  [✓] Checking for cron&#xA;  [✓] Checking for curl&#xA;  [✓] Checking for dnsutils&#xA;  [✓] Checking for iputils-ping&#xA;  [✓] Checking for lsof&#xA;  [✓] Checking for netcat&#xA;  [✓] Checking for psmisc&#xA;  [✓] Checking for sudo&#xA;  [✓] Checking for unzip&#xA;  [✓] Checking for wget&#xA;  [✓] Checking for idn2&#xA;  [✓] Checking for sqlite3&#xA;  [✓] Checking for libcap2-bin&#xA;  [✓] Checking for dns-root-data&#xA;  [✓] Checking for resolvconf&#xA;  [✓] Checking for libcap2&#xA;  [✓] Checking for lighttpd&#xA;  [✓] Checking for php7.0-common&#xA;  [✓] Checking for php7.0-cgi&#xA;  [✓] Checking for php7.0-sqlite3&#xA;&#xA;  [✓] Enabling lighttpd service to start on reboot...&#xA;&#xA;  [i] FTL Checks...&#xA;&#xA;  [✓] Detected ARM-hf architecture (armv6l)&#xA;  [i] Checking for existing FTL binary...&#xA;  [✓] Downloading and Installing FTL&#xA;  [✓] Creating user &amp;#39;pihole&amp;#39;&#xA;  [✓] Installing scripts from /etc/.pihole&#xA;&#xA;  [i] Installing configs from /etc/.pihole...&#xA;  [i] Existing dnsmasq.conf found... it is not a Pi-hole file, leaving alone!&#xA;  [✓] Copying 01-pihole.conf to /etc/dnsmasq.d/01-pihole.conf&#xA;&#xA;  [i] Installing blocking page...&#xA;  [✓] Creating directory for blocking page, and copying files&#xA;  [✗] Backing up index.lighttpd.html&#xA;      No default index.lighttpd.html file found... not backing up&#xA;&#xA;  [✓] Installing sudoer file&#xA;&#xA;  [✓] Installing latest Cron script&#xA;&#xA;  [✓] Installing latest logrotate script&#xA;  [i] Backing up /etc/dnsmasq.conf to /etc/dnsmasq.conf.old&#xA;&#xA;  [i] Skipping firewall configuration&#xA;  [✓] man pages installed and database updated&#xA;  [i] Testing if systemd-resolved is enabled&#xA;  [i] Systemd-resolved is not enabled&#xA;  [✓] Restarting lighttpd service...&#xA;  [✓] Enabling lighttpd service to start on reboot...&#xA;  [i] Restarting services...&#xA;  [✓] Enabling pihole-FTL service to start on reboot...&#xA;  [✓] Restarting pihole-FTL service...&#xA;  [✓] Deleting existing list cache&#xA;  [i] Pi-hole blocking is enabled&#xA;  [i] Neutrino emissions detected...&#xA;  [✓] Pulling blocklist source list into range&#xA;&#xA;  [i] Target: raw.githubusercontent.com (hosts)&#xA;  [✓] Status: Retrieval successful&#xA;&#xA;  [i] Target: mirror1.malwaredomains.com (justdomains)&#xA;  [✓] Status: Retrieval successful&#xA;&#xA;  [i] Target: sysctl.org (hosts)&#xA;  [✓] Status: Retrieval successful&#xA;&#xA;  [i] Target: zeustracker.abuse.ch (blocklist.php?download=domainblocklist)&#xA;  [✓] Status: Retrieval successful&#xA;&#xA;  [i] Target: s3.amazonaws.com (simple_tracking.txt)&#xA;  [✓] Status: Retrieval successful&#xA;&#xA;  [i] Target: s3.amazonaws.com (simple_ad.txt)&#xA;  [✓] Status: Retrieval successful&#xA;&#xA;  [i] Target: hosts-file.net (ad_servers.txt)&#xA;  [✓] Status: Retrieval successful&#xA;&#xA;  [✓] Consolidating blocklists&#xA;  [✓] Extracting domains from blocklists&#xA;  [i] Number of domains being pulled in by gravity: 135697&#xA;  [✓] Removing duplicate domains&#xA;  [i] Number of unique domains trapped in the Event Horizon: 113438&#xA;  [i] Nothing to whitelist!&#xA;  [i] Number of regex filters: 0&#xA;  [✓] Parsing domains into hosts format&#xA;  [✓] Cleaning up stray matter&#xA;&#xA;  [✓] Force-reloading DNS service&#xA;  [✓] DNS service is running&#xA;  [i] Pi-hole blocking will be enabled&#xA;  [i] Enabling blocking&#xA;  [✓] Reloading DNS service&#xA;  [✓] Pi-hole Enabled&#xA;  [i] Web Interface password: ********&#xA;  [i] This can be changed using &amp;#39;pihole -a -p&amp;#39;&#xA;&#xA;  [i] View the web interface at http://pi.hole/admin or http://192.168.1.252/admin&#xA;&#xA;  [i] You may now configure your devices to use the Pi-hole as their DNS server&#xA;  [i] Pi-hole DNS (IPv4): 192.168.1.252&#xA;  [i] If you set a new IP address, please restart the server running the Pi-hole&#xA;&#xA;  [i] The install log is located at: /etc/pihole/install.log&#xA;Installation Complete!&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;My router uses the IP address &lt;code&gt;192.168.1.254&lt;/code&gt; and allocates &lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol&#34;&gt;DHCP&lt;/a&gt;&#xA;IP addresses from &lt;code&gt;192.168.1.1&lt;/code&gt; and does not allow DHCP&#xA;configuration. I opted to use the ethernet port and use IP address&#xA;&lt;code&gt;192.168.1.252&lt;/code&gt; and the Cloudflare DNS service. The router does allow&#xA;DNS configuration, so I changed the default DNS to &lt;code&gt;192.168.1.252&lt;/code&gt; so&#xA;I don&amp;rsquo;t have to make any changes to DNS configuration elsewhere.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Source Code Syntax Highlighting</title>
      <link>http://localhost:1313/blog/post/source-code-highlighting/</link>
      <pubDate>Sun, 24 Mar 2019 11:01:35 +0000</pubDate>
      <guid>http://localhost:1313/blog/post/source-code-highlighting/</guid>
      <description>&lt;p&gt;One of the enhancements suggested for my android &lt;a href=&#34;https://github.com/billthefarmer/editor&#34; title=&#34;https://github.com/billthefarmer/editor&#34;&gt;editor&lt;/a&gt; is syntax&#xA;highlighting. The libraries I have found, including the &lt;a href=&#34;https://github.com/alecthomas/chroma&#34; title=&#34;https://github.com/alecthomas/chroma&#34;&gt;one&lt;/a&gt; used&#xA;in this blog, parse the input and produce output in HTML, using styled&#xA;spans. &lt;a href=&#34;https://www.gnu.org/software/emacs&#34; title=&#34;https://www.gnu.org/software/emacs&#34;&gt;Emacs&lt;/a&gt; makes extensive use of &lt;a href=&#34;https://en.wikipedia.org/wiki/Regular_expression&#34; title=&#34;https://en.wikipedia.org/wiki/Regular_expression&#34;&gt;regular expressions&lt;/a&gt; for&#xA;highlighting.&lt;/p&gt;&#xA;&lt;p&gt;HTML output is not very useful for a text editor. It could be used&#xA;with &lt;a href=&#34;https://developer.android.com/reference/android/text/Html.html#fromHtml(java.lang.String)&#34; title=&#34;https://developer.android.com/reference/android/text/Html.html&#34;&gt;Html.fromHtml()&lt;/a&gt; to produce styled text. This would then be&#xA;loaded back into the editor all while the user is attempting to edit&#xA;the text. I don&amp;rsquo;t think so. So I explored alternatives.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Musical Temperaments</title>
      <link>http://localhost:1313/blog/post/musical-temperaments/</link>
      <pubDate>Tue, 29 Jan 2019 20:58:13 +0000</pubDate>
      <guid>http://localhost:1313/blog/post/musical-temperaments/</guid>
      <description>&lt;p&gt;My &lt;a href=&#34;https://github.com/billthefarmer/tuner&#34;&gt;Tuner app&lt;/a&gt; uses equal temperament because that is the current&#xA;standard and it is relatively easy to calculate using double precision&#xA;arithmetic and maths library functions. First, declare some constants.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;OCTAVE&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;12;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;EQUAL&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;8;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;A_OFFSET&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;9;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;C5_OFFSET&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;57;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The calculation first produces the cents relative to the reference,&#xA;usually 440Hz. Then the note number with an added constant because&#xA;octaves start at &lt;strong&gt;C&lt;/strong&gt;, not &lt;strong&gt;A&lt;/strong&gt;. Then the reference frequency for&#xA;that note, then the cents difference.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Draw Musical Staff</title>
      <link>http://localhost:1313/blog/post/draw-musical-staff/</link>
      <pubDate>Sun, 13 Jan 2019 18:35:26 +0000</pubDate>
      <guid>http://localhost:1313/blog/post/draw-musical-staff/</guid>
      <description>&lt;p&gt;A musical staff is not a trivial thing to draw because of the complex&#xA;curves needed for the treble and bass clef. What is needed is a source&#xA;of vector drawing coordinates.&lt;/p&gt;&#xA;&lt;p&gt;The data used was originally intended for use in postscript, so the&#xA;vertical axis is reversed.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Treble clef&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;tc&lt;span style=&#34;color:#666&#34;&gt;[][]=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;6,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;16},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;8,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;13},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;14,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;19},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;10,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;35},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{2,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;35},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{8,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;37},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{21,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;30},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{21,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;17},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{21,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;5},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{10,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;1},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{0,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;1},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;12,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;1},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;23,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;5},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;23,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;22},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;23,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;29},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;22,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;37},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;7,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;49},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{10,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;61},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{10,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;68},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{10,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;73},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{10,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;78},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{9,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;82},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{7,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;82},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{2,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;78},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;2,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;68},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;2,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;62},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;2,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;25},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{10,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;18},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{11,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;8},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{11,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;18},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{5,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;23},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;4,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;23},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;10,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;23},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;15,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;18},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;15,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;13},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;15,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;8},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;12,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;4},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;7,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;4},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{3,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;4},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{3,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;20},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;6,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;17},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;5,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;23},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{9,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;20},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{9,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;9},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{7,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;24},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;5,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;30},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;5,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;67},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;5,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;78},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;2,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;87},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{7,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;91},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{13,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;87},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{18,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;80},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{17,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;73},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{17,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;62},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{10,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;54},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{1,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;45},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;5,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;38},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;15,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;33},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;15,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;19},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;15,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;7},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;8,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;1},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{0,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;1},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{8,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;1},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{15,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;6},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{15,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;14},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{15,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;23},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{7,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;26},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{2,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;26},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;5,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;26},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;9,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;21},&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;6,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;16}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;};&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Bass clef&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;bc&lt;span style=&#34;color:#666&#34;&gt;[][]&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;2.&lt;span style=&#34;color:#b44&#34;&gt;3f&lt;/span&gt;,3},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{6,7},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{10.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;,12},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{10.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;,16},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{10.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;,20.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{8.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;,23.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{6.&lt;span style=&#34;color:#b44&#34;&gt;2f&lt;/span&gt;,23.&lt;span style=&#34;color:#b44&#34;&gt;3f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{5.&lt;span style=&#34;color:#b44&#34;&gt;2f&lt;/span&gt;,23.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{2,23.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{0.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;,19.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{2,20},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{4,19.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{4,18},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{4,17},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{3.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;,16},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{2,16},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{1,16},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{0,16.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{0,18.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{0,21},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{2.&lt;span style=&#34;color:#b44&#34;&gt;1f&lt;/span&gt;,24},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{6,24},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{10,24},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{13.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;,21.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{13.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;,16.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{13.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;,11},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{7,5.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;2.&lt;span style=&#34;color:#b44&#34;&gt;0f&lt;/span&gt;,2.&lt;span style=&#34;color:#b44&#34;&gt;8f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{14.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,21},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{14.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,22.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{16.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,22.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{16.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,21},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{16.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,19.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{14.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,19.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{14.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,21},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{14.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,15},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{14.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,16.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{16.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,16.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{16.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,15},&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{16.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,13.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{14.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,13.&lt;span style=&#34;color:#b44&#34;&gt;5f&lt;/span&gt;},&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{14.&lt;span style=&#34;color:#b44&#34;&gt;9f&lt;/span&gt;,15}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;};&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Both these sets of points are made up of an initial move, followed by&#xA;a series of cubic bezier curves. The bass clef has three sections, the&#xA;symbol, followed by the two dots.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Expand Android Selection</title>
      <link>http://localhost:1313/blog/post/expand-android-selection/</link>
      <pubDate>Sun, 09 Dec 2018 12:21:39 +0000</pubDate>
      <guid>http://localhost:1313/blog/post/expand-android-selection/</guid>
      <description>&lt;p&gt;When editing data or source files it would be useful to have&#xA;selections triggered by a double tap or long press expand to enclosing&#xA;delimiters or brackets.&lt;/p&gt;&#xA;&lt;p&gt;There is a section in the &lt;a href=&#34;https://developer.android.com/guide/topics/ui/menus#context-menu&#34;&gt;Android docs&lt;/a&gt; which explains how to set&#xA;up your own context menu or contextual action mode, but not how to&#xA;change the selection.&lt;/p&gt;&#xA;&lt;p&gt;This method is fine if you have only one text editor view in your app,&#xA;but would be difficult with more than one as there is no way to&#xA;identify the originating view. In Java a regular expression (regex)&#xA;can only search forwards, but not backwards, so we search forwards&#xA;using a regex, work out what to look for backwards, and use a standard&#xA;string reverse search to find the start of the extended selection. The&#xA;regex contains bracket characters and quote characters. If the forward&#xA;search finds an opening bracket, we don&amp;rsquo;t change the selection. If the&#xA;extended selection contains a newline we don&amp;rsquo;t change the selection&#xA;because we have probably got a closing quote on one line and an&#xA;opening quote on another. If the delimiter is a semicolon we look back&#xA;for a newline.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create PDF Report</title>
      <link>http://localhost:1313/blog/post/create-pdf-report/</link>
      <pubDate>Tue, 18 Sep 2018 19:27:46 +0100</pubDate>
      <guid>http://localhost:1313/blog/post/create-pdf-report/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;As part of the &lt;a href=&#34;https://billthefarmer.github.io/blog/post/questionnaire&#34;&gt;Questionnaire Maker&lt;/a&gt; plugin it is necessary to&#xA;create a pdf report. The best tool to do this appears to be&#xA;&lt;a href=&#34;https://tcpdf.org&#34;&gt;TCPDF&lt;/a&gt;, which appears to be part of at least some Linux&#xA;distributions as &lt;code&gt;php-tcpdf&lt;/code&gt;. It is not included in WordPress.&lt;/p&gt;&#xA;&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;&#xA;&lt;p&gt;As both the plugin and TCPDF are hosted on GitHub, the best way to&#xA;implement the plugin, and TCPDF if it is not available on the web&#xA;server, is to clone the repositories and use symbolic links to provide&#xA;the plugin and the library in the right places. The same method could&#xA;be used to implement WordPress.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Questionnaire Maker</title>
      <link>http://localhost:1313/blog/post/questionnaire/</link>
      <pubDate>Mon, 20 Aug 2018 17:14:32 +0100</pubDate>
      <guid>http://localhost:1313/blog/post/questionnaire/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;Questionnaire Maker is a WordPress and Hugo plugin that asks a series&#xA;of questions and produces a PDF report. The project is on &lt;a href=&#34;https://github.com/billthefarmer/questionnaire&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;documentation&#34;&gt;Documentation&lt;/h3&gt;&#xA;&lt;p&gt;The plugin uses the shortcodes &lt;code&gt;[questionnaire-questions]&lt;/code&gt; and&#xA;&lt;code&gt;[questionnaire-report]&lt;/code&gt;, or &lt;code&gt;{{&amp;lt; questionnaire-questions &amp;gt;}}&lt;/code&gt; and&#xA;&lt;code&gt;{{&amp;lt; questionnaire-report &amp;gt;}}&lt;/code&gt;. The shortcode will be replaced on the&#xA;page with a series of panels containing the questions and options for&#xA;the answers, or a panel with a preview of the report.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Handling Resizing in Windows</title>
      <link>http://localhost:1313/blog/post/handling-resizing-in-windows/</link>
      <pubDate>Tue, 19 Jun 2018 20:23:44 +0100</pubDate>
      <guid>http://localhost:1313/blog/post/handling-resizing-in-windows/</guid>
      <description>&lt;p&gt;I have a windows app where I want the app window to maintain it&amp;rsquo;s&#xA;aspect ratio when it is resized. Windows provides two mechanisms for&#xA;this, the &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows/desktop/ms632646(v=vs.85).aspx&#34;&gt;&lt;code&gt;WM_SIZE&lt;/code&gt;&lt;/a&gt; message and the &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows/desktop/ms632647(v=vs.85).aspx&#34;&gt;&lt;code&gt;WM_SIZING&lt;/code&gt;&lt;/a&gt; message. The&#xA;&lt;code&gt;WM_SIZE&lt;/code&gt; message is sent when a window has been resized to allow&#xA;child windows to be resized, the &lt;code&gt;WM_SIZING&lt;/code&gt; message is sent while the&#xA;user is resizing it to allow the size to be adjusted. The messages are&#xA;handled in the &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows/desktop/ms633573(v=vs.85).aspx&#34;&gt;&lt;code&gt;WindowProc&lt;/code&gt;&lt;/a&gt; callback function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Swift</title>
      <link>http://localhost:1313/blog/swift/</link>
      <pubDate>Wed, 28 Mar 2018 15:56:14 +0000</pubDate>
      <guid>http://localhost:1313/blog/swift/</guid>
      <description>&lt;p&gt;Some years ago I wrote an OSX app in C using &lt;a href=&#34;https://en.wikipedia.org/wiki/Carbon_(API)&#34;&gt;Carbon&lt;/a&gt; because my&#xA;Hackintosh would only run &lt;a href=&#34;https://en.wikipedia.org/wiki/Mac_OS_X_Tiger&#34;&gt;OSX 10.4 (Tiger)&lt;/a&gt;. The most difficult&#xA;part was dealing with the &lt;a href=&#34;https://developer.apple.com/documentation/coreaudio&#34;&gt;Core Audio&lt;/a&gt; API.&lt;/p&gt;&#xA;&lt;p&gt;I recently decided to port it to &lt;a href=&#34;https://developer.apple.com/swift&#34;&gt;Swift&lt;/a&gt; to avoid having to attempt&#xA;to learn Objective C. A derivation of C that sends selectors to&#xA;targets using the syntax &lt;code&gt;[target selector arguments...]&lt;/code&gt; I don&amp;rsquo;t want&#xA;to know about.&lt;/p&gt;&#xA;&lt;h3 id=&#34;core-audio&#34;&gt;Core Audio&lt;/h3&gt;&#xA;&lt;p&gt;Having translated the Core Audio part of the app to Swift, I&#xA;discovered that part of it refused to work. The same code originally&#xA;written in C works fine.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Custom Attributes</title>
      <link>http://localhost:1313/blog/android-custom-attributes/</link>
      <pubDate>Mon, 08 Jan 2018 11:02:04 +0000</pubDate>
      <guid>http://localhost:1313/blog/android-custom-attributes/</guid>
      <description>&lt;p&gt;I had resisted adding a dark theme to my &lt;a href=&#34;https://github.com/billthefarmer/diary&#34;&gt;Diary&lt;/a&gt; app until now&#xA;because it uses a &lt;a href=&#34;https://github.com/billthefarmer/CustomCalendarView&#34;&gt;custom calendar&lt;/a&gt; with built in customisable&#xA;styles and preferences with icons. So I had to work out how to make&#xA;the custom styles of the calendar revert to styles from the current&#xA;theme, and how to switch icons for the preferences according to the&#xA;theme.&lt;/p&gt;&#xA;&lt;h3 id=&#34;calendar-custom-styles&#34;&gt;Calendar custom styles&lt;/h3&gt;&#xA;&lt;p&gt;The custom calendar has a list of styles that are customisable in a&#xA;&lt;code&gt;attrs.xml&lt;/code&gt; file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Recent Files</title>
      <link>http://localhost:1313/blog/android-recent-files/</link>
      <pubDate>Fri, 15 Dec 2017 11:53:57 +0000</pubDate>
      <guid>http://localhost:1313/blog/android-recent-files/</guid>
      <description>&lt;p&gt;There are several parts to this - creating the list of files, saving&#xA;the list in the preferences, restoring the list on startup and&#xA;creating the list in the menu.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// onCreate&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Override&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;protected&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;onCreate&lt;/span&gt;(Bundle&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;savedInstanceState)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;super&lt;/span&gt;.&lt;span style=&#34;color:#b44&#34;&gt;onCreate&lt;/span&gt;(savedInstanceState);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;SharedPreferences&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;preferences&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;PreferenceManager.&lt;span style=&#34;color:#b44&#34;&gt;getDefaultSharedPreferences&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;this&lt;/span&gt;);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Create a map of scroll positions by file name&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;Set&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;pathSet&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;preferences.&lt;span style=&#34;color:#b44&#34;&gt;getStringSet&lt;/span&gt;(PREF_PATHS,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;null&lt;/span&gt;);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;pathMap&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;HashMap&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;String,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Integer&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;();&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(pathSet&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;null&lt;/span&gt;)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(String&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;path&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;pathSet)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                &lt;/span&gt;pathMap.&lt;span style=&#34;color:#b44&#34;&gt;put&lt;/span&gt;(path,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;preferences.&lt;span style=&#34;color:#b44&#34;&gt;getInt&lt;/span&gt;(path,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;0));&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;removeList&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;ArrayList&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;();&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// ...&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The android preference system only allows a list of strings to be&#xA;stored as a set, so the last modified date of each file is used below&#xA;to order the list. The code also saves the scroll position of each&#xA;file using the file name as a key. The remove list is used to remove&#xA;old entries.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Text Search</title>
      <link>http://localhost:1313/blog/android-text-search/</link>
      <pubDate>Thu, 26 Oct 2017 11:57:27 +0100</pubDate>
      <guid>http://localhost:1313/blog/android-text-search/</guid>
      <description>&lt;p&gt;The Android guide for &lt;a href=&#34;https://developer.android.com/guide/topics/search/index.html&#34;&gt;Search Overview&lt;/a&gt; is oriented towards&#xA;searching external content rather than text. There is a mention of&#xA;&lt;a href=&#34;https://developer.android.com/guide/topics/search/search-dialog.html#SearchDialog&#34;&gt;Using the Search Dialog&lt;/a&gt;. However all the bits you need are&#xA;there. To get a search dialog in the toolbar that pops up when needed,&#xA;you need a seach item in the menu. It should be the first item, unless&#xA;there is a good reason otherwise.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;menu&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#b44&#34;&gt;xmlns:android=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;http://schemas.android.com/apk/res/android&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;&#34;&gt;&amp;lt;item&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#b44&#34;&gt;android:id=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;@+id/search&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#b44&#34;&gt;android:showAsAction=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;ifRoom|collapseActionView&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#b44&#34;&gt;android:title=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;@string/search&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#b44&#34;&gt;android:actionViewClass=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;android.widget.SearchView&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#b44&#34;&gt;android:icon=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;@drawable/ic_action_search&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The search dialog will still pop up if the search item is in the menu&#xA;rather than the toolbar. The dialog pops up and collapses all by&#xA;itself in response to user interaction without any developer code. To&#xA;implement the search, you need an &lt;a href=&#34;https://developer.android.com/reference/android/widget/SearchView.OnQueryTextListener.html&#34;&gt;OnQueryTextListener&lt;/a&gt;, which is&#xA;called by the &lt;a href=&#34;https://developer.android.com/reference/android/widget/SearchView.html&#34;&gt;SearchView&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Emacs in Android Development</title>
      <link>http://localhost:1313/blog/using-emacs-in-android-development/</link>
      <pubDate>Wed, 18 Oct 2017 15:51:28 +0100</pubDate>
      <guid>http://localhost:1313/blog/using-emacs-in-android-development/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve got a folder full of country flags which I have renamed using&#xA;scripts so the names correspond to currency symbols. I want an integer&#xA;array with references to the flags as android resources. This can be&#xA;automated using emacs.&lt;/p&gt;&#xA;&lt;p&gt;I get a list of the file names into a buffer using find, which I then&#xA;open with emacs.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  % find src/ -name flag* &amp;gt; data/sym-flags.lst&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;images/2017/10/flags.png&#34; alt=&#34;Flags&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;They are already sorted, but just to make sure I use &lt;code&gt;M-x sort-lines&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown OpenStreetMap Maps</title>
      <link>http://localhost:1313/blog/markdown-openstreetmap-maps/</link>
      <pubDate>Sat, 14 Oct 2017 12:59:06 +0100</pubDate>
      <guid>http://localhost:1313/blog/markdown-openstreetmap-maps/</guid>
      <description>&lt;p&gt;There does not seem to be a convention for showing maps or&#xA;co-ordinates in Markdown, but almost anything gets put in square&#xA;brackets &lt;code&gt;[&amp;lt;anything&amp;gt;]&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I had a request from &lt;a href=&#34;https://github.com/marcoM32&#34;&gt;Marco&lt;/a&gt; the other day to put&#xA;&lt;a href=&#34;http://www.openstreetmap.org&#34;&gt;OpenStreetMap&lt;/a&gt; maps in my &lt;a href=&#34;https://github.com/billthefarmer/diary&#34;&gt;Diary&lt;/a&gt; app using&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  [&amp;lt;lat&amp;gt;,&amp;lt;lng&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;syntax. So I did a bit of a search to see if there was a convention in&#xA;Markdown for co-ordinates and couldn&amp;rsquo;t find anything. So we seem to&#xA;have broken new ground here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Related Content working</title>
      <link>http://localhost:1313/blog/getting-related-content-working/</link>
      <pubDate>Wed, 13 Sep 2017 11:30:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/getting-related-content-working/</guid>
      <description>&lt;p&gt;The latest release of &lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;Hugo&lt;/a&gt; includes &lt;a href=&#34;http://gohugo.io/content-management/related&#34;&gt;Related Content&lt;/a&gt;, which I&#xA;thought would be nice to add to my blog. However the docs, although&#xA;they show you how to set it up, don&amp;rsquo;t explain how it works. To find&#xA;that out, I had to look at the various threads on the&#xA;&lt;a href=&#34;https://discourse.gohugo.io&#34;&gt;Hugo forums&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;There are four parts - you need to create a new partial template in&#xA;&lt;code&gt;layouts/partials/related.html&lt;/code&gt; containing something like this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $related := .Site.RegularPages.Related . | first 5 }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ with $related }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;hr&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;h3&lt;/span&gt;&amp;gt;See Also&amp;lt;/&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;h3&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ul&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {{ range . }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;li&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;{{ .RelPermalink }}&amp;#34;&lt;/span&gt;&amp;gt;{{ safeHTML .Title }}&amp;lt;/&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {{ end }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ul&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You need to add a reference to your new partial template in your single page template in &lt;code&gt;layouts/_default/single.html&lt;/code&gt; possibly near the end:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Adding a calendar event in android</title>
      <link>http://localhost:1313/blog/adding-a-calendar-event/</link>
      <pubDate>Tue, 05 Sep 2017 14:54:25 +0100</pubDate>
      <guid>http://localhost:1313/blog/adding-a-calendar-event/</guid>
      <description>&lt;p&gt;The android docs for the &lt;a href=&#34;https://developer.android.com/guide/topics/providers/calendar-provider.html&#34;&gt;Calendar Provider&lt;/a&gt; are quite useful, but&#xA;recommend the use of an &lt;a href=&#34;https://developer.android.com/reference/android/content/AsyncQueryHandler.html&#34;&gt;AsyncQueryHandler&lt;/a&gt; for querying or adding&#xA;events to calendars in an asynchronous thread. However the&#xA;&lt;code&gt;AsyncQueryHandler&lt;/code&gt; docs don&amp;rsquo;t include much guidance as to how to use&#xA;it.&lt;/p&gt;&#xA;&lt;p&gt;To add an entry to an android calendar you first have to find out the&#xA;calendar id using an asynchronous query on the calendars table.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// QueryHandler&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;QueryHandler&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;AsyncQueryHandler&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;String&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;TAG&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;QueryHandler&amp;#34;&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Projection arrays&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;String&lt;span style=&#34;color:#666&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;CALENDAR_PROJECTION&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;String&lt;span style=&#34;color:#666&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;Calendars.&lt;span style=&#34;color:#b44&#34;&gt;_ID&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;};&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// The indices for the projection array above.&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;CALENDAR_ID_INDEX&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;0;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;CALENDAR&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;0;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;EVENT&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;1;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;REMINDER&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;2;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;QueryHandler&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;queryHandler;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// QueryHandler&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;QueryHandler&lt;/span&gt;(ContentResolver&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;resolver)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;super&lt;/span&gt;(resolver);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// insertEvent&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;insertEvent&lt;/span&gt;(Context&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;context,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;startTime,&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                                   &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;endTime,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;String&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;title)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;ContentResolver&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;resolver&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;context.&lt;span style=&#34;color:#b44&#34;&gt;getContentResolver&lt;/span&gt;();&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(queryHandler&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;null&lt;/span&gt;)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;queryHandler&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;QueryHandler(resolver);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;ContentValues&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;values&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;ContentValues();&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;values.&lt;span style=&#34;color:#b44&#34;&gt;put&lt;/span&gt;(Events.&lt;span style=&#34;color:#b44&#34;&gt;DTSTART&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;startTime);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;values.&lt;span style=&#34;color:#b44&#34;&gt;put&lt;/span&gt;(Events.&lt;span style=&#34;color:#b44&#34;&gt;DTEND&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;endTime);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;values.&lt;span style=&#34;color:#b44&#34;&gt;put&lt;/span&gt;(Events.&lt;span style=&#34;color:#b44&#34;&gt;TITLE&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;title);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(BuildConfig.&lt;span style=&#34;color:#b44&#34;&gt;DEBUG&lt;/span&gt;)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;Log.&lt;span style=&#34;color:#b44&#34;&gt;d&lt;/span&gt;(TAG,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Calendar query start&amp;#34;&lt;/span&gt;);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;queryHandler.&lt;span style=&#34;color:#b44&#34;&gt;startQuery&lt;/span&gt;(CALENDAR,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;values,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Calendars.&lt;span style=&#34;color:#b44&#34;&gt;CONTENT_URI&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;                                &lt;/span&gt;CALENDAR_PROJECTION,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;null&lt;/span&gt;);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This method is called from an app activity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Whatever-o-meter revisited</title>
      <link>http://localhost:1313/blog/whatever-o-meter-revisited/</link>
      <pubDate>Thu, 24 Aug 2017 11:47:00 +0100</pubDate>
      <guid>http://localhost:1313/blog/whatever-o-meter-revisited/</guid>
      <description>&lt;p&gt;I wrote the whatever-o-meter about five years ago in PHP and&#xA;Javascript as a Wordpress plugin. As I have migrated my blog to Hugo,&#xA;I thought to have a go at reimplementing it. The exporter I used made&#xA;a good job of translating the Wordpress custom fields to Hugo front&#xA;matter parameters. I had to put dashes in quotes, otherwise they get&#xA;interpreted as &lt;code&gt;[&amp;lt;nil&amp;gt;]&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;intro&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Please answer the following questions carefully and truthfully.&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;question&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;- You are lying in bed on Monday morning...&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;result&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;- &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;%d percent, Perhaps you should consider emigration.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;- &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;%d%, Consider taking a long holiday somewhere far away.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;left&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;- Go and jump in the shower quick&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;right&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;- Jump on him&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;weights&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;centre&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;- &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;- &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;- So so&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;more&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;https://billthefarmer.github.io/blog/morris-o-meter&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The javascript part should just work as it is, the PHP plugin needed&#xA;re-implementing as a hugo shortcode. The first part of the plugin just&#xA;outputs svg code to draw the dial and pointer, that was fairly easy to&#xA;implement, it just has some iteration in it. I had to change the ticks&#xA;slightly as Hugo doesn&amp;rsquo;t appear to support floating point arithmetic&#xA;in templates.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Migrating this blog from Wordpress</title>
      <link>http://localhost:1313/blog/migrating-blog-from-wordpress/</link>
      <pubDate>Sat, 19 Aug 2017 14:30:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/migrating-blog-from-wordpress/</guid>
      <description>&lt;p&gt;I have got fed up with &lt;a href=&#34;https://wordpress.org&#34;&gt;Wordpress&lt;/a&gt;. It required constant updates,&#xA;which doesn&amp;rsquo;t work automatically on &lt;a href=&#34;https://sourceforge.net/p/forge/documentation/Developer%20Web%20Services&#34;&gt;Sourceforge developer web&lt;/a&gt;,&#xA;and it&amp;rsquo;s slow, especially in admin mode. I came across a reference to&#xA;&lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; while following up on something unrelated, so I decided to&#xA;investigate.&lt;/p&gt;&#xA;&lt;p&gt;I looked for migration tools, and found two:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/thomasf/exitwp&#34;&gt;Exitwp&lt;/a&gt;, which reads a Wordpress export xml file and converts&#xA;to &lt;a href=&#34;https://github.com/jekyll/jekyll&#34;&gt;Jeckyll&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/SchumacherFM/wordpress-to-hugo-exporter&#34;&gt;WordPress to Hugo Exporter&lt;/a&gt;, which is a Wordpress plugin and&#xA;exports to &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;I found a &lt;a href=&#34;http://justindunham.net/migrating-from-wordpress-to-hugo&#34;&gt;blog post&lt;/a&gt; from &lt;a href=&#34;http://justindunham.net&#34;&gt;Justin Dunham&lt;/a&gt; documenting migrating&#xA;his blog. He tried the &lt;a href=&#34;https://github.com/SchumacherFM/wordpress-to-hugo-exporter&#34;&gt;WordPress to Hugo Exporter&lt;/a&gt; first, but&#xA;couldn&amp;rsquo;t get it to work, so he used &lt;a href=&#34;https://github.com/thomasf/exitwp&#34;&gt;Exitwp&lt;/a&gt;. I tried this, which&#xA;just worked, but I didn&amp;rsquo;t like the look of tidying up all the blog&#xA;entries to work with &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Resolving content uris in android</title>
      <link>http://localhost:1313/blog/resolving-content-uris-in-android/</link>
      <pubDate>Sun, 23 Jul 2017 10:48:17 +0000</pubDate>
      <guid>http://localhost:1313/blog/resolving-content-uris-in-android/</guid>
      <description>&lt;p&gt;If you write an android app that handles images or any other sort of file your app may be required to deal with ‘content’ uris (&lt;code&gt;content://&lt;/code&gt;). There is a very useful utility which resolves these into ‘file’ uris (&lt;code&gt;file:///&lt;/code&gt;) &lt;a href=&#34;https://github.com/iPaulPro/aFileChooser/blob/master/aFileChooser/src/com/ipaulpro/afilechooser/utils/FileUtils.java&#34;&gt;FileUtils.java&lt;/a&gt;. This contains one external reference to &lt;a href=&#34;https://github.com/iPaulPro/aFileChooser/blob/master/aFileChooser/src/com/ianhanniballake/localstorage/LocalStorageProvider.java&#34;&gt;LocalStorageProvider&lt;/a&gt;, which can be resolved by removing the function &lt;code&gt;isLocalStorageDocument()&lt;/code&gt; and references to it.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// import com.ianhanniballake.localstorage.LocalStorageProvider;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// ...&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;         * @param uri The Uri to check.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;         * @return Whether the Uri authority is {@link LocalStorageProvider}.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;         * @author paulburke&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;         */&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;isLocalStorageDocument&lt;/span&gt;(Uri&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;uri)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;LocalStorageProvider.&lt;span style=&#34;color:#b44&#34;&gt;AUTHORITY&lt;/span&gt;.&lt;span style=&#34;color:#b44&#34;&gt;equals&lt;/span&gt;(uri.&lt;span style=&#34;color:#b44&#34;&gt;getAuthority&lt;/span&gt;());&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Having done that, you can then resolve ‘content’ uris&lt;/p&gt;</description>
    </item>
    <item>
      <title>Handling run time changes in Android</title>
      <link>http://localhost:1313/blog/handling-run-time-changes-in-android/</link>
      <pubDate>Sun, 08 Jan 2017 18:49:31 +0000</pubDate>
      <guid>http://localhost:1313/blog/handling-run-time-changes-in-android/</guid>
      <description>&lt;p&gt;Two articles, &lt;a href=&#34;https://developer.android.com/guide/topics/resources/runtime-changes.html&#34;&gt;Handling Configuration Changes&lt;/a&gt; and &lt;a href=&#34;http://www.androiddesignpatterns.com/2013/04/retaining-objects-across-config-changes.html&#34;&gt;Handling Configuration Changes with Fragments&lt;/a&gt; recommend the use of fragments to retain data and background tasks in Android during the life of an app. There are two problems with this:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;An android fragment is quite a complex heavyweight object to use just for retaining data and possibly a background task, and the fragment management is not simple.&lt;/li&gt;&#xA;&lt;li&gt;Fragments are not retained if the associated activity is discarded by calling &lt;code&gt;finish()&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;A simpler and less complex solution is to use a static singleton, mentioned here in a different context: &lt;a href=&#34;https://developer.android.com/training/volley/requestqueue.html&#34;&gt;Setting Up a RequestQueue&lt;/a&gt;. This is quite simple to implement, like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Emacs as an IDE</title>
      <link>http://localhost:1313/blog/using-emacs-as-an-ide/</link>
      <pubDate>Sat, 10 Dec 2016 13:59:22 +0000</pubDate>
      <guid>http://localhost:1313/blog/using-emacs-as-an-ide/</guid>
      <description>&lt;p&gt;I had to learn Emacs on Unix many years ago as it was at that time the only development environment for Smallworld Magik. Having learnt it, I have stuck with it as it provides a consistent platform for editing source code and building applications in as many computer languages and platforms as I have used and many more I haven’t. It is the only source code editor I have used that always gets the indentation and syntax highlighting right.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upgrading a Moto G</title>
      <link>http://localhost:1313/blog/upgrading-a-moto-g/</link>
      <pubDate>Sun, 18 Sep 2016 20:27:57 +0000</pubDate>
      <guid>http://localhost:1313/blog/upgrading-a-moto-g/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/2016/09/Moto_g.jpg&#34; alt=&#34;Moto G&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;I got myself a refurbished Moto G phone a while ago. It came with Android Kitkat 4.4.4, complete with Moto bloat. I had already put &lt;a href=&#34;http://www.cyanogenmod.org&#34;&gt;Cyanogenmod&lt;/a&gt; on my tablet, so I installed Cyanogenmod 11, android 4.4.4 on it, in accordance with the instructions on the &lt;a href=&#34;https://wiki.cyanogenmod.org/w/Install_CM_for_falcon&#34;&gt;wiki&lt;/a&gt;, no problem. That got rid of the bloat and allows fine control of app snooping via Privacy Guard in the settings.&lt;/p&gt;&#xA;&lt;p&gt;When I first installed Cyanogenmod, I had to use an unofficial build, as an official build for Kitkat 4.4.4 wasn’t available. Now there are six official builds &lt;a href=&#34;http://download.cyanogenmod.org/?type=snapshot&amp;amp;device=falcon&#34;&gt;available&lt;/a&gt;, including two for Marshmallow. I tried to upgrade to Lollipop using the built in upgrade system, but failed I think it complained about the bootloader.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upgrading to Windows 10</title>
      <link>http://localhost:1313/blog/upgrading-to-windows-10/</link>
      <pubDate>Mon, 25 Jul 2016 19:46:29 +0000</pubDate>
      <guid>http://localhost:1313/blog/upgrading-to-windows-10/</guid>
      <description>&lt;p&gt;I didn’t like the Windows 10 preview, I thought it was a pain in the backside, so I have delayed upgrading from Windows 7 until the last minute when I got the countdown notification. I have been running a slightly dodgy copy of Windows 7 for a long time, so I was somewhat surprised when, out of the goodness of their hearts, Microsoft said I could have an activated copy of Windows 10 for free.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Resurrecting a netbook as a web server</title>
      <link>http://localhost:1313/blog/resurrecting-a-netbook-as-a-web-server/</link>
      <pubDate>Sat, 27 Feb 2016 19:58:47 +0000</pubDate>
      <guid>http://localhost:1313/blog/resurrecting-a-netbook-as-a-web-server/</guid>
      <description>&lt;p&gt;When I got fed up with Windows XP on my netbook, I tried windows 7 on it, but it was barely usable. So I tried Windows 7 Starter which was better. I upgraded it to Home Premium, which was OK at first, but slowed down as it got clagged up with updates.&lt;/p&gt;&#xA;&lt;p&gt;That was it until recently, when I read an article about putting Windows 10 on one. I didn’t try that, but I did try &lt;a href=&#34;http://www.linuxmint.com&#34;&gt;Linux Mint&lt;/a&gt; on it. That works quite nicely. Then my other half decided to research her family tree and wanted some software to put her data on. We looked at what was available and decided that &lt;a href=&#34;https://www.webtrees.net/index.php/en&#34;&gt;Webtrees&lt;/a&gt; was the most usable. That requires a web server and up stepped my netbook.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Build Mac OSX apps using command line tools</title>
      <link>http://localhost:1313/blog/build-mac-osx-apps-using-command-line-tools/</link>
      <pubDate>Tue, 02 Feb 2016 17:59:09 +0000</pubDate>
      <guid>http://localhost:1313/blog/build-mac-osx-apps-using-command-line-tools/</guid>
      <description>&lt;p&gt;You will need to install the Xcode command line tools, you don’t need the Xcode app. The easiest way to do this is to attempt to build an app like emacs by typing &lt;code&gt;./configure&lt;/code&gt; on the command line. A dialog box will pop up asking if you want to download and install the tools.&lt;/p&gt;&#xA;&lt;p&gt;Xcode now uses the LLVM CLang compiler and documentation is exceedingly hard to find. You can type &lt;code&gt;gcc -help&lt;/code&gt; or &lt;code&gt;clang -help&lt;/code&gt; on the command line to get some info. I found two web pages with more useful info: &lt;a href=&#34;http://clang.llvm.org/docs/CommandGuide/clang.html&#34;&gt;http://clang.llvm.org/docs/CommandGuide/clang.html&lt;/a&gt; and &lt;a href=&#34;https://developer.apple.com/library/prerelease/mac/documentation/Porting/Conceptual/PortingUnix/compiling/compiling.html&#34;&gt;https://developer.apple.com/library/prerelease/mac/documentation/Porting/Conceptual/PortingUnix/compiling/compiling.html&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Read iBook books on an Android tablet</title>
      <link>http://localhost:1313/blog/read-ibook-books-on-an-android-tablet/</link>
      <pubDate>Tue, 02 Feb 2016 16:59:51 +0000</pubDate>
      <guid>http://localhost:1313/blog/read-ibook-books-on-an-android-tablet/</guid>
      <description>&lt;p&gt;You will need to install &lt;a href=&#34;http://calibre-ebook.com&#34;&gt;Calibre&lt;/a&gt; to make the books usable, and the books must be DRM free.&lt;/p&gt;&#xA;&lt;p&gt;There are two ways to do this:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If you have a Mac or Hackintosh you can find your books in &lt;code&gt;~/Library/Containers/com.apple.BKAgentService/Data/Documents/iBooks/Books&lt;/code&gt;, in what appears to be epub files but are really folders with numeric names. Copy the ones you want to somewhere accessible, like &lt;code&gt;~/Books&lt;/code&gt;, and zip the contents of each folder, not the folder itself. Rename the zip files as epub files.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/2016/02/iBooks.png&#34; alt=&#34;iBooks&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Install OSX El Capitan on a PC (MBR)</title>
      <link>http://localhost:1313/blog/install-osx-el-capitan-on-a-pc-mbr/</link>
      <pubDate>Tue, 26 Jan 2016 11:36:38 +0000</pubDate>
      <guid>http://localhost:1313/blog/install-osx-el-capitan-on-a-pc-mbr/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/2016/01/El-Capitan.png&#34; alt=&#34;OSX El Capitan&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A real Mac or Hackintosh&lt;/li&gt;&#xA;&lt;li&gt;A spare disk drive – at least 8Gb, preferably USB&lt;/li&gt;&#xA;&lt;li&gt;An 8Gb or larger USB stick&lt;/li&gt;&#xA;&lt;li&gt;The Install OSX El Capitan.app from the App Store&lt;/li&gt;&#xA;&lt;li&gt;A disk partition to install in&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;install-on-spare-disk-drive&#34;&gt;Install on spare disk drive&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/2016/01/os-x-el-capitan-installer.png&#34; alt=&#34;El Capitan Installer&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Connect your spare drive to your PC. Use the method described &lt;a href=&#34;http://eladnava.com/install-os-x-10-11-el-capitan-on-hackintosh-vanilla&#34;&gt;here&lt;/a&gt; to build the El Capitan install USB stick and install OSX using the GPT partition scheme on your spare disk drive. Check it boots up OK and works OK.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Move Linux Mint Root Partition</title>
      <link>http://localhost:1313/blog/move-linux-mint-root-partition/</link>
      <pubDate>Mon, 31 Aug 2015 13:33:24 +0000</pubDate>
      <guid>http://localhost:1313/blog/move-linux-mint-root-partition/</guid>
      <description>&lt;p&gt;I recently added a new disk drive to my workstation and, as part of reorganising, wanted to move the Linux Mint root partition from one disk to another. Naturally I &lt;del&gt;googled&lt;/del&gt; duckied it and found a certain amount of useful info.&lt;/p&gt;&#xA;&lt;p&gt;I used gnuparted to copy the partition from one disk to another. The standard method to reinstall grub on a partition so it will boot appears to be to mount it and use grub-install with the –boot-directory option like this.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Handlers in Android</title>
      <link>http://localhost:1313/blog/handlers-in-android/</link>
      <pubDate>Sun, 10 May 2015 15:51:40 +0000</pubDate>
      <guid>http://localhost:1313/blog/handlers-in-android/</guid>
      <description>&lt;h3 id=&#34;using-a-handler-to-return-results-from-a-worker-thread&#34;&gt;Using a handler to return results from a worker thread&lt;/h3&gt;&#xA;&lt;p&gt;This has taken me quite a while to put together. There are throw-away remarks in the Android docs about this, but no useful examples. You want to get the results back from a worker thread to your main activity so you can do stuff with them. There are several parts to this.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The main activity implements &lt;a href=&#34;http://developer.android.com/reference/android/os/Handler.Callback.html&#34;&gt;Handler.Callback&lt;/a&gt;, and has a &lt;a href=&#34;http://developer.android.com/reference/android/os/Handler.Callback.html#handleMessage%28android.os.Message%29&#34;&gt;handleMessage&lt;/a&gt; function.&lt;/li&gt;&#xA;&lt;li&gt;When the worker thread is created, include a reference to the main activity.&lt;/li&gt;&#xA;&lt;li&gt;In the worker thread constructor, create a &lt;a href=&#34;http://developer.android.com/reference/android/os/Handler.html&#34;&gt;Handler&lt;/a&gt;, including the reference to the main activity.&lt;/li&gt;&#xA;&lt;li&gt;When some results need passing back, send a &lt;a href=&#34;http://developer.android.com/reference/android/os/Message.html&#34;&gt;Message&lt;/a&gt; back to the main activity using the handler.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;MyActivity&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Activity&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;implements&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Handler.&lt;span style=&#34;color:#b44&#34;&gt;Callback&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//...&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// On create&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Override&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;onCreate&lt;/span&gt;(Bundle&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;savedInstanceState)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//...&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;WorkerThread&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;worker&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;WorkerThread(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;this&lt;/span&gt;);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//...&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;handleMessage&lt;/span&gt;(Message&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;msg)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//...&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;WorkerThread&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Thread&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;Handler&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;handler;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//...&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Constructor&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;WorkerThread&lt;/span&gt;(Handler.&lt;span style=&#34;color:#b44&#34;&gt;Callback&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;callback)&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;handler&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Handler(callback);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//...&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;someFunction&lt;/span&gt;()&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;handler.&lt;span style=&#34;color:#b44&#34;&gt;sendEmptyMessage&lt;/span&gt;(WHATEVER);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// or&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;Message&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;msg&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;handler.&lt;span style=&#34;color:#b44&#34;&gt;obtainMessage&lt;/span&gt;(WHATEVER,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;thingy);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;handler.&lt;span style=&#34;color:#b44&#34;&gt;sendMessage&lt;/span&gt;(msg);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//...&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The handler will send the message back to the activity in the UI thread, so you can do whatever with the contents.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Search Engine Optimisation (SEO)</title>
      <link>http://localhost:1313/blog/search-engine-optimisation-seo/</link>
      <pubDate>Wed, 01 Apr 2015 18:17:07 +0000</pubDate>
      <guid>http://localhost:1313/blog/search-engine-optimisation-seo/</guid>
      <description>&lt;p&gt;I haven’t worried too much about search engines since I set this site up. I registered it with Google initially, and after a few days it appeared in the results, so that was good enough for me. If you search for Old Shoreham Buccaneers, or a subset of that, the Buccaneers site appears high in the results, job done.&lt;/p&gt;&#xA;&lt;p&gt;Since I published a &lt;a href=&#34;sausages-with-green-lentils&#34;&gt;recipe&lt;/a&gt; based on the BBC TV programme &lt;a href=&#34;http://www.bbc.co.uk/programmes/b03pn297&#34;&gt;Italy Unpacked&lt;/a&gt; about a month ago, I have been getting a lot of hits on the &lt;a href=&#34;categories/recipes&#34;&gt;Recipes&lt;/a&gt; page. When I finally got around to checking I found that this is due to it being the only actual recipe directly attributed to the show in the search results. It’s &lt;del&gt;currently fourth&lt;/del&gt; now second in the listing if you search for &lt;a href=&#34;https://www.google.co.uk/search?hl=en&amp;amp;q=sausage%20and%20lentils%20recipe%20Italy%20Unpacked&#34;&gt;sausage and lentils recipe Italy Unpacked&lt;/a&gt; on Google.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fast Fourier Transform</title>
      <link>http://localhost:1313/blog/fast-fourier-transform/</link>
      <pubDate>Tue, 03 Mar 2015 12:44:13 +0000</pubDate>
      <guid>http://localhost:1313/blog/fast-fourier-transform/</guid>
      <description>&lt;p&gt;I wrote a java tuner app a few years ago, so I needed a &lt;a href=&#34;https://en.wikipedia.org/wiki/Fast_Fourier_transform&#34;&gt;Fast Fourier Transform&lt;/a&gt; to do the frequency detection. I found a fairly simple implementation in java on the web somewhere, can’t remember where, tried it, and it worked fine. The frequency detection algorithm comes from &lt;a href=&#34;http://www.dspdimension.com/admin/pitch-shifting-using-the-ft&#34;&gt;The Dsp Dimension&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;A few years later I ported it to windows, added a few gizmos for tuning accordions and put it on &lt;a href=&#34;https://code.google.com/p/ctuner&#34;&gt;Google Code&lt;/a&gt;. I was concerned that the FFT implementation was simplistic and did more research online to find better implementations. However, when I actually checked the performance with a profiling tool, I found that the spectrum display code was the bottleneck and the FFT was not significant. I tried a few different FFT implementations anyway, but they didn’t make a significant difference. I then ported the app to OSX, which has a built in high performance &lt;a href=&#34;https://developer.apple.com/library/ios/documentation/Performance/Conceptual/vDSP_Programming_Guide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40005147&#34;&gt;DSP&lt;/a&gt; library, so no problem there.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Transfer contacts from iPhone to Android</title>
      <link>http://localhost:1313/blog/transfer-contacts-from-iphone-to-android/</link>
      <pubDate>Wed, 18 Feb 2015 17:45:54 +0000</pubDate>
      <guid>http://localhost:1313/blog/transfer-contacts-from-iphone-to-android/</guid>
      <description>&lt;p&gt;I’ve been using an old iPhone 3G, and I’ve got myself a new Android phone. First off, I &lt;del&gt;googled&lt;/del&gt; &lt;a href=&#34;https://duckduckgo.com&#34;&gt;DuckDuckGo&lt;/a&gt;’d how to transfer my contacts and found lots of suggestions. First, I tried &lt;a href=&#34;https://itunes.apple.com/gb/app/my-contacts-backup/id446784593&#34;&gt;My Contacts Backup&lt;/a&gt;, but it wouldn’t install on the iPhone.&lt;/p&gt;&#xA;&lt;p&gt;So I synced the contacts with my &lt;a href=&#34;https://en.wikipedia.org/wiki/OSx86&#34;&gt;Hackintosh&lt;/a&gt; using iTunes, exported the contacts to a &lt;a href=&#34;https://en.wikipedia.org/wiki/VCard&#34;&gt;vCard&lt;/a&gt; file, transferred it to the phone by email and imported the file to the Contacts app on the phone. You need to ensure that all the contacts are selected when you export them. And delete the one for Apple that got in there at some stage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>C&#43;&#43;</title>
      <link>http://localhost:1313/blog/c/</link>
      <pubDate>Sat, 01 Nov 2014 13:10:54 +0000</pubDate>
      <guid>http://localhost:1313/blog/c/</guid>
      <description>&lt;p&gt;I made a vow about 20 years ago not to attempt to learn C++, when a colleague went on a C++ course. I did buy a C++ book, but it wasn’t that useful. I have looked at the source of various C++ programs over the years to attempt to find out how they worked. I have, until recently, invariably found that the code that does something useful is either hidden in include files, or buried so deep in obscure code that just seems to create and do strange things with various objects, that I have been unable to find it. I have seen similar Java programs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Collections</title>
      <link>http://localhost:1313/blog/java-collections/</link>
      <pubDate>Sat, 01 Nov 2014 12:18:28 +0000</pubDate>
      <guid>http://localhost:1313/blog/java-collections/</guid>
      <description>&lt;p&gt;I find Java Collections frustrating and insane. I have been through this loop on several occasions. I decide I want a list to do whatever. So I look up &lt;a href=&#34;http://developer.android.com/reference/java/util/List.html&#34;&gt;List&lt;/a&gt; in the docs and find it’s an interface, ie: roll yer own. So I look down the hierarchy and find &lt;a href=&#34;http://developer.android.com/reference/java/util/AbstractList.html&#34;&gt;AbstractList&lt;/a&gt;, which is abstract, again: roll yer own. So finally I get to &lt;a href=&#34;http://developer.android.com/reference/java/util/ArrayList.html&#34;&gt;ArrayList&lt;/a&gt; which might do the job, but the docs aren’t too clear, so I try it and it works. I just want a list that will do the job. I don’t care what it stores the data in, that level of detail is supposed to be obscured and possibly subject to change anyway.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Download streamed video</title>
      <link>http://localhost:1313/blog/download-streamed-video/</link>
      <pubDate>Fri, 06 Jun 2014 16:03:16 +0000</pubDate>
      <guid>http://localhost:1313/blog/download-streamed-video/</guid>
      <description>&lt;p&gt;Online video providers tend to stream the video to a javascript player, so making it extremely difficult to capture the video. &lt;a href=&#34;http://words.bombast.net/?p=75&#34;&gt;This blog&lt;/a&gt; explains a method using Chrome to spoof the user agent string, pretending to be an iPad. Unfortunately, this doesn’t seem to work any more in the latest version of Chrome.&lt;/p&gt;&#xA;&lt;p&gt;So I tried installing a user agent spoofing plugin in Firefox. It seemed to work, but the video didn’t play, so I couldn’t find the url. I next tried Firefox on my Android tablet and the video played. To find the url of the video I used Firefox remote debugging. &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Tools/Remote_Debugging/Firefox_for_Android&#34;&gt;This page&lt;/a&gt; describes how to set it up in detail.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Concurrency, Threads, Semaphores and Mutexes</title>
      <link>http://localhost:1313/blog/concurrency-threads-semaphores-and-mutexes/</link>
      <pubDate>Wed, 04 Jun 2014 15:45:20 +0000</pubDate>
      <guid>http://localhost:1313/blog/concurrency-threads-semaphores-and-mutexes/</guid>
      <description>&lt;p&gt;I have written several applications in both Java and C that involve running an audio thread in the background to read or write audio from or to the audio system while displaying the results and interacting with the user in the foreground. I have used lots of threads, but never a semaphore or mutex apart from the odd boolean variable.&lt;/p&gt;&#xA;&lt;p&gt;This issue is reminiscent of back in the day when you actually had or could get a circuit diagram of your computer and could understand it. One of the first machines I had suffered from display corruption when the display was updated due to contention between the processor and the display system. It was fairly simply fixable by using a spare inverter to reverse the phase of the display system clock to remove the contention.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upgrading WordPress</title>
      <link>http://localhost:1313/blog/upgrading-wordpress/</link>
      <pubDate>Wed, 28 May 2014 11:05:54 +0000</pubDate>
      <guid>http://localhost:1313/blog/upgrading-wordpress/</guid>
      <description>&lt;p&gt;This site has the firewall set up so that the web server has no external access. This means that I can’t use the usual WordPress update mechanism to keep it up to date. I use &lt;a href=&#34;https://filezilla-project.org&#34;&gt;FileZilla&lt;/a&gt; for maintaining the server, and I recently discovered you can use drag and drop to move stuff around remotely.&lt;/p&gt;&#xA;&lt;p&gt;So my easy WordPress upgrade method is:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Download the latest zip file and unzip it.&lt;/li&gt;&#xA;&lt;li&gt;Rename the wordpress folder to something else, like wordpress-old.&lt;/li&gt;&#xA;&lt;li&gt;Upload the new wordpress folder.&lt;/li&gt;&#xA;&lt;li&gt;Move the stuff you need from the old wordpress-old folder, like themes, plugins, uploads, any modified theme files and your config.php file.&lt;/li&gt;&#xA;&lt;li&gt;Check it works and upgrade the database.&lt;/li&gt;&#xA;&lt;li&gt;Remove the old wordpress-old folder.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Nearly as easy as letting it do it itself.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Haskell</title>
      <link>http://localhost:1313/blog/haskell/</link>
      <pubDate>Sat, 29 Mar 2014 15:26:14 +0000</pubDate>
      <guid>http://localhost:1313/blog/haskell/</guid>
      <description>&lt;p&gt;I read an article recently about how amazingly efficient functional programming, and Haskell in particular is. So I thought I’s give it a go and see how I got on.&lt;/p&gt;&#xA;&lt;p&gt;You can try it out in your browser: &lt;a href=&#34;http://tryhaskell.org&#34;&gt;http://tryhaskell.org&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    λ &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;let&lt;/span&gt; factorial n &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;=&lt;/span&gt; product [&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;..&lt;/span&gt;n] &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; factorial &lt;span style=&#34;color:#666&#34;&gt;99&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#666&#34;&gt;9332621544394415268169923885626670049071596826438162146859&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#666&#34;&gt;2963895217599993229915608941463976156518286253697920827223&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#666&#34;&gt;7582511852109168640000000000000000000000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;::&lt;/span&gt; (&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;Enum&lt;/span&gt; a, &lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;Num&lt;/span&gt; a) &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    λ  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Pretty impressive! So I thought I’d try a simple web application.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;Network.CGI&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cgiMain &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;CGI&lt;/span&gt; &lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;CGIResult&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cgiMain &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        setHeader &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        output &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Hello World!&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;IO&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;=&lt;/span&gt; runCGI (handleErrors cgiMain)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This seemed to work, so I tried a graphical GTK app.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SlimStat</title>
      <link>http://localhost:1313/blog/slimstat/</link>
      <pubDate>Thu, 26 Dec 2013 16:03:46 +0000</pubDate>
      <guid>http://localhost:1313/blog/slimstat/</guid>
      <description>&lt;p&gt;When I first set up this web site, I looked for a simple web analytics program so that I could see if anyone actually looked at it. After faffing about with a couple of well known open source packages, I decided that they were way over the top by several orders of magnitude. Then I found &lt;a href=&#34;https://web.archive.org/web/20120920012925/http://slimstat.net&#34;&gt;SlimStat&lt;/a&gt;. However it appears to be no longer actively maintained, which it why the previous link is via the Way Back Machine. But it works just fine. It’s also on &lt;a href=&#34;https://github.com/stephenwettone/slimstat&#34;&gt;Github&lt;/a&gt; and &lt;a href=&#34;http://code.google.com/p/slimstat&#34;&gt;Google Code&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Raspberry Pi Wifi</title>
      <link>http://localhost:1313/blog/raspberry-pi-wifi/</link>
      <pubDate>Sat, 21 Dec 2013 20:16:37 +0000</pubDate>
      <guid>http://localhost:1313/blog/raspberry-pi-wifi/</guid>
      <description>&lt;p&gt;When I got my Pi some months ago I bought a wifi adapter for it, as you do. But I couldn’t get it to work reliably in Raspbian, and I didn’t even try in Arch Linux. So I tested the adapter on my windoze box, and it worked just fine, and I tried it with Linux and it worked just fine, so I put it in the ‘too hard’ box.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python</title>
      <link>http://localhost:1313/blog/python/</link>
      <pubDate>Sat, 21 Dec 2013 18:54:52 +0000</pubDate>
      <guid>http://localhost:1313/blog/python/</guid>
      <description>&lt;p&gt;I’ve studiously avoided Python up till now, even though it appears to be fairly popular, because it violates the first law of compiler design: ‘Blank space shalt not be significant except to separate tokens where necessary.’. That’s why you can minimise a lengthy JavaScript script like &lt;a href=&#34;http://jquery.com&#34;&gt;jQuery&lt;/a&gt; to one enormously long line and it still works just fine.&lt;/p&gt;&#xA;&lt;p&gt;But, she-who-shall-be-ignored (self categorisation) decided she wanted to enter an advent calender competition which involved checking a web page to see if your name has come up and sending an email if it does. So I thought that’s an ideal little job to run on my &lt;a href=&#34;http://www.raspberrypi.org&#34;&gt;Raspberry Pi&lt;/a&gt;. So I installed the ssmtp package and attempted to test sending an email. After several days of faffing about with no joy I gave up.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Whatever-o-meter</title>
      <link>http://localhost:1313/blog/whatever-o-meter/</link>
      <pubDate>Wed, 20 Nov 2013 18:55:54 +0000</pubDate>
      <guid>http://localhost:1313/blog/whatever-o-meter/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/2013/11/Whatever.png&#34; alt=&#34;Whatever&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;Whatever-o-meter is a WordPress and Hugo plugin that shows a tachometer-like dial with a pointer, asks a series of predefined questions which are answered by moving a slider, shows one of several predefined results, and moves the tacho pointer to a position determined by the value of the result. The project is on &lt;a href=&#34;https://github.com/billthefarmer/whatever-o-meter%22&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;documentation&#34;&gt;Documentation&lt;/h3&gt;&#xA;&lt;p&gt;Whatever-o-meter uses the shortcode [&lt;strong&gt;whatever-o-meter&lt;/strong&gt;] or {{&amp;lt;&lt;strong&gt;whatever-o-meter&lt;/strong&gt;&amp;gt;}} to insert the whatever-o-meter display into the page. Other page content above and below the shortcode will appear on the page as normal. Do not use more than one whatever-o-meter shortcode on the page, only the first one is likely to work. If the shortcode is used on a page with no questions defined, the code will be replaced with the message:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
